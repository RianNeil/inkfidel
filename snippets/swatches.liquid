<style>

/* Hiding the drop-downs. */
#product-variants, .selector-wrapper { display:none; }

/* Style the swatches */
#swatches { margin:20px 0 0; }
.swatch { margin:0; }
.swatch ul { list-style-type:none; margin:0; padding:0; }
.swatch li {
  /* Rounded corners */
  -webkit-border-radius:0px;
  -moz-border-radius:0px;
  border-radius:0px;
  /* Cross-browser inline-block */
  display:-moz-inline-stack;
  display:inline-block;
  zoom:1;
  *display:inline;
  /* Content must stretch all the way to borders */
  padding:0;
  /* Background color */
  background-color:#fcfcfc;
  /* Spacing between buttons */
  margin:0px 5px 10px 0;
  /* Fake that those are buttons, i.e. clicky */
  cursor:pointer;
  /* The border when the button is not selected */
  border: #06e921 1px solid !important;
  /* To position the sold out graphic and tooltip */
  position:relative;
  /* Text styling */
  text-transform:capitalize;
  font-size:13px;
}

/* Styles for the text or color container within the swatch button */
.swatch li span { display:block; margin:5px 10px; }
/* Special styles for color swatches */
/* They don't contain text so they need to have a width and height */
.swatch li.color { width:50px; height:35px; }
/* The container of the image/color must be as big as its container */
.swatch li.color span { width:100%; height:100%; margin:0; }

/* Styling sold out options */
.swatch ul.options li.soldout { cursor:default; }
/* That's the image with the cross in it */
.crossed-out { position:absolute; width:100%; height:100%; left:0; right:0; }
.swatch li .crossed-out { display:none; }
.swatch li.soldout .crossed-out { display:block; }
.swatch li.soldout span {
  filter: alpha(opacity=60); /* internet explorer */
  -khtml-opacity: 0.6;      /* khtml, old safari */
  -moz-opacity: 0.6;       /* mozilla, netscape */
  opacity: 0.6;           /* fx, safari, opera */
}

/* Styling selected swatch */
/* Darker border and slightly raised */
.swatch li.selected {
  border:#06e921 1px solid !important;
  background: #2884b6;
  color: #fff;
  -webkit-box-shadow:0px 1px 2px rgba(0,0,0,0.25);
  -moz-box-shadow:0px 1px 2px rgba(0,0,0,0.25);
  box-shadow:0px 1px 2px rgba(0,0,0,0.25);
}

/* Bring on animated tooltips */
.swatch .options li {
  -webkit-transform: translateZ(0); /* webkit flicker fix */
  -webkit-font-smoothing: antialiased; /* webkit text rendering fix */
}

/* Tooltips */
.swatch .tooltip {
  /* Color and text alignment */
  text-align:center;
  background:grey;
  color:#fff;
  bottom:100%;
  padding: 10px;
  /* Positioning */
  display:block;
  position:absolute;
  width:100px;
  left:-30px;
  margin-bottom:15px;
  /* Make it invisible by default */
  filter:alpha(opacity=0);
  -khtml-opacity: 0;
  -moz-opacity: 0;
  opacity:0;
  visibility:hidden;
  /* Animations */
  -webkit-transform: translateY(10px);
     -moz-transform: translateY(10px);
      -ms-transform: translateY(10px);
       -o-transform: translateY(10px);
          transform: translateY(10px);
  -webkit-transition: all .25s ease-out;
     -moz-transition: all .25s ease-out;
      -ms-transition: all .25s ease-out;
       -o-transition: all .25s ease-out;
          transition: all .25s ease-out;
  -webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
     -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
      -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
       -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
          box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
}
/* This bridges the gap so you can mouse into the tooltip without it disappearing */
.swatch .tooltip:before {
  bottom:-20px;
  content:" ";
  display:block;
  height:20px;
  left:0;
  position:absolute;
  width:100%;
}
/* CSS Triangle */
.swatch .options li .tooltip:after {
  border-left: solid transparent 10px;
  border-right: solid transparent 10px;
  /* the color below  must match the color of the
  background of your tooltip */
  border-top: solid gray 10px;
  bottom: -10px;
  content: " ";
  height: 0;
  left: 50%;
  margin-left: -13px;
  position: absolute;
  width: 0;
}
/* Tooltip visible */
.swatch li:hover .tooltip {
  filter: alpha(opacity=100);
  -khtml-opacity: 1;
  -moz-opacity: 1;
  opacity: 1;
  visibility: visible;
  -webkit-transform: translateY(0px);
     -moz-transform: translateY(0px);
      -ms-transform: translateY(0px);
       -o-transform: translateY(0px);
          transform: translateY(0px);
}
  
.clickable-option{
 transition: 0.5s; 
}
  
#options-unavailable{
    display: none;
    background: rgb(245, 94, 13);
    color: white;
    padding: 10px;
    margin-bottom: 15px;
    width: 100%;
    text-align: center;
    transition: 0.5s;
}

</style>

  <div id="options-unavailable">
    
  </div>

{% for option in product.options %}
  {% unless option == 'backorder-status' %}
    {% unless option contains 'BuyXDiscount' %}

      {% assign option_handle = option | handle %}
      {% assign option_index = forloop.index0 %}
      {% assign is_color = false %}

      {% capture downcased_option %}{{ option | downcase }}{% endcapture %}

      {% if downcased_option contains 'color' or downcased_option contains 'colour' %}
        {% assign is_color = true %}
      {% endif %}

      <div class="swatch clearfix">
        <h5>{{ option }}</h5>
        <ul class="option-{{ option_handle }}" option="{{ option_handle }}" id="option{{forloop.index}}_values">
          {% assign values = '' %}
          {% assign backorders = '' %}

          {% for variant in product.variants %}
          
            <!--      if on backorder        -->
            {% if variant.available and variant.inventory_quantity < 1%}
              <!--      make string based off options      -->
              {% capture variant_string %}{% if variant.option1 != blank %}{{ variant.option1 | handleize}}{% endif %}{% if variant.option2 != blank %}-{{ variant.option2 | handleize}}{% endif %}{% if variant.option3 != blank %}-{{ variant.option3 | handleize}}{% endif %},{% endcapture %}
              <!--      add string to backorders     -->
              {% capture backorders %}{{ backorders }}{{ variant_string }}{% endcapture %}
            {% endif %}
          
             
            {% unless variant.title contains '% Off' %}
                {% assign value = variant.options[option_index] %}
                {% capture wrapped_value %},{{ value }},{% endcapture %}
          
                {% if values contains wrapped_value %}

                  <script>
                    var element = document.getElementById('{{ value | handleize  }}');
                    element.setAttribute('variants', element.getAttribute('variants')+" {{ variant.option1 | handleize  }} {{ variant.option2 | handleize  }} {{ variant.option3 | handleize }} " );
                  </script>
          


                  {% else %}

                  <li id="{{ value | handleize  }}" 
                      variants="{{ variant.option1 | handleize }} {{ variant.option2 | handleize }} {{ variant.option3 | handleize  }}" 
                      data-option-title="{{ value | escape }}" option-category="{{ option_handle | handleize }}"
                      class="
                             clickable-option 
                             {{ option_handle | handleize }}
                             {{ value | handle }} 
                             {% if is_color %} 
                             	color 
                             {% else %} 
                             	variant-{{variant.id}} 
                             {% endif %}
                             {% if variant.available and !is_color %}
                             	available
                               {% if variant.inventory_quantity < 1 %}
                                 backorder
                               {% endif %}
                             {% else %}
                             	soldout unavailable
                             {% endif %} 
                             "
                      >
                    
                    
                    <img class="crossed-out" src="{{ 'soldout.png' | asset_url }}" style="display:none;"/>
                    {% if is_color %}
                      <div class="tooltip">{{ value }}</div>
                    {% endif %}
                    
                    {% if is_color %}
                        <span style="background-color: {{ value | split: ' ' | last | handle }}; background-image: url({{ value | handle | append: '.png' | asset_url }})"></span>
                    {% else %}
                        <span>{{ value }} {% if variant.available %}{% else %} (Out of Stock){% endif %}</span>
                    {% endif %}
                  </li>

                  {% capture values %}{{ values }}{{ wrapped_value }}{% endcapture %}

                {% endif %}

                
                  <script>
                    jQuery('.options:eq({{ option_index }}) li.{{ value | handle }}').removeClass('soldout').addClass('available');
                  </script>
                

            {% endunless %}

          {% endfor %}
          <script>
            console.log('swatches added');
          </script>
        </ul>
      </div><!-- .swatch -->

    {% endunless %}
  {% endunless %}
{% endfor %}

{% assign backorder_list = backorders | split: ',' %}

<script>
  console.log('this script is contained in swatches.liquid');
  
  document.addEventListener("DOMContentLoaded", function(event) {
    backorders = [];
    {% for word in backorder_list %}
      backorders.push('{{ word }}');
    {% endfor %}
        
    //get size li items
    var clickable_options = document.getElementsByClassName('clickable-option');
    
    for(i = 0; i< clickable_options.length; i++){
      
        //ONCLICK FUNCTION
        clickable_options[i].addEventListener("click", function(element){
          
          this.classList.remove("unselected");
          this.classList.add("selected");

          console.log('clicked '+this.id);
         
          var selected = document.querySelectorAll('.clickable-option.selected');
          var selected_string = ''
          
          for( k = 0; k < selected.length; k++ ){
            //if another member of selected has same option as this.option, remove from list
            //e.g. large, red, cotton are selected, client clicks medium, now medium, red, cotton are selected
            if( selected[k].getAttribute('option-category') == this.getAttribute('option-category') && selected[k] != this ){
              selected[k].classList.remove('selected');
              continue;
            }
            
            selected_string = selected_string+selected[k].id+'-';
          }
          
          selected_string = selected_string.substring(0, selected_string.length - 1);
          
          //if backorder             
          if(backorders.includes(selected_string)){
              document.getElementById('backorder-wrapper').classList.remove("invisible");
              document.getElementById('backorder-wrapper').classList.add("visible");
          }else{
              document.getElementById('backorder-wrapper').classList.remove("visible");
              document.getElementById('backorder-wrapper').classList.add("invisible");
          }
        
        });
    }

  });
  
  
</script>